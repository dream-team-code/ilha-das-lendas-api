// <auto-generated />
using System;
using IlhadasLendasAPI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IlhadasLendasAPI.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230211193908_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IlhadasLendasAPI.Domain.Entities.Jogador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("Bagre")
                        .HasMaxLength(10000)
                        .HasColumnType("int")
                        .HasColumnName("Bagre");

                    b.Property<string>("CaminhoAbsoluto")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("CaminhoAbsoluto");

                    b.Property<string>("CaminhoFisico")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("CaminhoFisico");

                    b.Property<string>("CaminhoRelativo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("CaminhoRelativo");

                    b.Property<string>("CategoriaJogador")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Academy")
                        .HasColumnName("CategoriaJogador");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraEnvio")
                        .HasColumnType("datetime2");

                    b.Property<int>("MVP")
                        .HasMaxLength(10000)
                        .HasColumnType("int")
                        .HasColumnName("MVP");

                    b.Property<Guid>("NacionalidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Nick");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Nome");

                    b.Property<Guid>("NomeArquivo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NomeArquivo")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("Pontuacao")
                        .HasMaxLength(10000)
                        .HasColumnType("int")
                        .HasColumnName("Pontuacao");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("1")
                        .HasColumnName("Status");

                    b.Property<int>("UltimaPontuacao")
                        .HasMaxLength(10000)
                        .HasColumnType("int")
                        .HasColumnName("UltimaPontuacao");

                    b.HasKey("Id");

                    b.HasIndex("NacionalidadeId");

                    b.HasIndex("RoleId");

                    b.ToTable("Jogadores", (string)null);
                });

            modelBuilder.Entity("IlhadasLendasAPI.Domain.Entities.Nacionalidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Nome");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ativo")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("Nacionalidades", (string)null);
                });

            modelBuilder.Entity("IlhadasLendasAPI.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Nome");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ativo")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("IlhadasLendasAPI.Domain.Entities.Time", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CaminhoAbsoluto")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("CaminhoAbsoluto");

                    b.Property<string>("CaminhoFisico")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("CaminhoFisico");

                    b.Property<string>("CaminhoRelativo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("CaminhoRelativo");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraEnvio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Nome");

                    b.Property<Guid>("NomeArquivo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NomeArquivo")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("1")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("Times", (string)null);
                });

            modelBuilder.Entity("JogadorTime", b =>
                {
                    b.Property<Guid>("JogadoresId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TimesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JogadoresId", "TimesId");

                    b.HasIndex("TimesId");

                    b.ToTable("JogadorTime");
                });

            modelBuilder.Entity("IlhadasLendasAPI.Domain.Entities.Jogador", b =>
                {
                    b.HasOne("IlhadasLendasAPI.Domain.Entities.Nacionalidade", "Nacionalidade")
                        .WithMany("Jogadores")
                        .HasForeignKey("NacionalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IlhadasLendasAPI.Domain.Entities.Role", "Role")
                        .WithMany("Jogadores")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nacionalidade");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("JogadorTime", b =>
                {
                    b.HasOne("IlhadasLendasAPI.Domain.Entities.Jogador", null)
                        .WithMany()
                        .HasForeignKey("JogadoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IlhadasLendasAPI.Domain.Entities.Time", null)
                        .WithMany()
                        .HasForeignKey("TimesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IlhadasLendasAPI.Domain.Entities.Nacionalidade", b =>
                {
                    b.Navigation("Jogadores");
                });

            modelBuilder.Entity("IlhadasLendasAPI.Domain.Entities.Role", b =>
                {
                    b.Navigation("Jogadores");
                });
#pragma warning restore 612, 618
        }
    }
}
